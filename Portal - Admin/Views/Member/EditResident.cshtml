@model ResComm.Web.Models.EditMemberModel
@{
    ViewBag.Title = "Edit Resident";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Title { Edit }
@section ContentHeader{
    <script>
        $(function () {
            $('#main_title').html("Resident");
        });
    </script>

}

<!-- Cascading Dropdown -->
<link href="@Url.Content("~/Content/cascadingdropdown/jquery.cascadingdropdown.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Content/cascadingdropdown/jquery.cascadingdropdown.js")" type="text/javascript"></script>
@{
    var EmptySelectList = new List<SelectListItem>();
    EmptySelectList.Add(new SelectListItem() { Value = "", Text = "Please Choose" });
}

<div class="row">
    @using (Html.BeginForm("EditResident", "Member", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(m => m.UserId)
        @*@Html.HiddenFor(m => m.UnitType.CategoryName)
        @Html.HiddenFor(m => m.UnitType.CategoryValue)
        @Html.HiddenFor(m => m.UnitNo)*@
        <div class="col-md-12">
            <div class="box box-danger">
                <div class="box-header">
                    <h3 class="box-title">User Information</h3>
                </div><!-- /.box-header -->
                <div class="box-body">
                    @*<div class="form-group">
                        <input type="checkbox" name="edit_unit" id="edit_unit" class="minimal" /> <label for="edit_unit">Change Resident Unit?</label>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ResidentType)
                        @Html.DropDownEnumListFor(m => m.ResidentType, typeof(RESIDENT_TYPE), new { @class = "form-control", @disabled = true }, false)
                    </div>

                    <div id="readonly_wrapper">
                        <div class="form-group">
                            <label>Block/Street</label>
                            @Html.TextBox("UnitType_CategoryName_RO", Model.UnitType.CategoryName, new { @class = "form-control", @readonly = true })
                        </div>
                        <div class="form-group">
                            <label>Block/Street Name</label>
                            @Html.TextBox("UnitType_CategoryValue_RO", Model.UnitType.CategoryValue, new { @class = "form-control", @readonly = true })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.UnitId)
                            @Html.TextBox("UnitNo_RO", Model.UnitNo, new { @class = "form-control", @readonly = true })
                        </div>
                    </div>

                    <div id="cascading-dropdown" style="display: none;">
                        <div class="form-group">
                            <label>Block/Street</label>
                            @Html.DropDownEnumList("UnitType_CategoryName", typeof(UNIT_TYPE_CATEGORY), new { @class = "form-control" }, true, "Please Choose")
                        </div>
                        <div class="form-group">
                            <label>Block/Street Name</label>
                            @Html.DropDownList("UnitType_CategoryValue", EmptySelectList, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.UnitId)
                            @Html.DropDownListFor(m => m.UnitId, EmptySelectList, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="line-light"></div>*@

                    <div class="form-group">
                        @Html.LabelFor(m => m.Name)
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PhoneNumber)
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email)
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    </div>
                </div><!-- /.box-body -->

                <div class="box-footer text-right">
                    <input type="submit" class="btn btn-primary" value="Submit" />
                </div>
            </div><!-- /.box -->

        </div><!--/.col (left) -->
    }
</div><!-- /.row -->

@*<script>
    $(function () {
        $('#edit_unit').on('ifChecked', function (event) {
            $('#cascading-dropdown').show();
            $('#readonly_wrapper').hide();
            $('#ResidentType').prop("disabled", false);
        });
        $('#edit_unit').on('ifUnchecked', function (event) {
            $('#cascading-dropdown').hide();
            $('#readonly_wrapper').show();
            $('#ResidentType').prop("disabled", true);
        });
    });
</script>
<script type="text/javascript">
    $('#cascading-dropdown').cascadingDropdown({
        selectBoxes: [
            {
                selector: '#UnitType_CategoryName'
            },
            {
                selector: '#UnitType_CategoryValue',
                requires: ['#UnitType_CategoryName'],
                source: function (request, response) {
                    request["CategoryName"] = request["UnitType_CategoryName"];

                    $.getJSON('@Url.Action("GetUnitTypes","UnitType")', request, function (data) {
                        response($.map(data, function (item, index) {
                            return {
                                label: item['Text'],
                                value: item['Value']
                            };
                        }));
                    });
                }
            },
            {
                selector: '#UnitId',
                requires: ['#UnitType_CategoryValue'],
                source: function (request, response) {
                    request["UnitTypeId"] = request["UnitType_CategoryValue"];

                    $.getJSON('@Url.Action("GetUnits", "Unit")', request, function (data) {
                        response($.map(data, function (item, index) {
                            return {
                                label: item['Text'],
                                value: item['Value']
                            };
                        }));
                    });
                }
            }
        ]
    });
</script>

<script>
    function form_submit_custom_check() {
        if ($("#edit_unit").is(':checked') == true) {
            if (UnitId == "") {
                alert("The Unit No. field is required.");
                return 'false';
            }
            else {
                return 'true';
            }
        }
        else {
            return 'true';
        }
    }
</script>*@