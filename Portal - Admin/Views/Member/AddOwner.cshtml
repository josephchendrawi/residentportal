@model ResComm.Web.Models.AddMemberModel
@{
    ViewBag.Title = "Add Owner";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Title { Add }
@section ContentHeader{
    <script>
        $(function () {
            $('#main_title').html("Owner");
        });
    </script>

}

<!-- Cascading Dropdown -->
<link href="@Url.Content("~/Content/cascadingdropdown/jquery.cascadingdropdown.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Content/cascadingdropdown/jquery.cascadingdropdown.js")" type="text/javascript"></script>
@{
    var EmptySelectList = new List<SelectListItem>();
    EmptySelectList.Add(new SelectListItem() { Value = "", Text = "Please Choose" });
}

<div class="row">
    @using (Html.BeginForm("AddOwner", "Member", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="col-md-12">
            <div class="box box-danger">
                <div class="box-header">
                    <h3 class="box-title">User Information</h3>
                </div><!-- /.box-header -->
                <div class="box-body">
                    <div class="form-group">
                        @Html.CheckBoxFor(m => m.isOwnerOccupied, new { @class = "minimal" })
                        <label for="isOwnerOccupied">Is the owner also a resident and staying at the unit?</label>
                    </div>

                    <div id="cascading-dropdown">
                        <div class="form-group">
                            <label>Block/Street</label>
                            @Html.DropDownEnumList("UnitType_CategoryName", typeof(UNIT_TYPE_CATEGORY), new { @class = "form-control" }, true, "Please Choose")
                        </div>
                        <div class="form-group">
                            <label>Block/Street Name</label>
                            @Html.DropDownList("UnitType_CategoryValue", EmptySelectList, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.UnitId)
                            @Html.DropDownListFor(m => m.UnitId, EmptySelectList, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="line-light"></div>

                    <div class="form-group">
                        @Html.CheckBoxFor(m => m.isNewMember, new { @class = "minimal" })
                        <label for="isNewMember">New User?</label>
                        <input type="hidden" value="true" id="isNewMember_value"/>
                    </div>
                    <script>
                        var NewUser = true;
                        $(function () {
                            $('#isNewMember').on('ifChecked', function (event) {
                                $('#form-new-user').show();
                                $('#form-existing-user').hide();
                                $('input#Email').prop("disabled", false);
                                $('select#Email').prop("disabled", true);

                                $('#isNewMember_value').val('true');
                            });
                            $('#isNewMember').on('ifUnchecked', function (event) {
                                $('#form-new-user').hide();
                                $('#form-existing-user').show();
                                $('input#Email').prop("disabled", true);
                                $('select#Email').prop("disabled", false);

                                $('#isNewMember_value').val('false');
                            });
                        });
                    </script>

                    <div id="form-new-user">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Name)
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.PhoneNumber)
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email)
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        </div>
                    </div>
                    <div id="form-existing-user" style="display:none;">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email)
                            @Html.DropDownListFor(m => m.Email, ViewBag.MemberList as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                </div><!-- /.box-body -->

                <div class="box-footer text-right">
                    <input type="submit" class="btn btn-primary" value="Submit" />
                </div>
            </div><!-- /.box -->

        </div><!--/.col (left) -->
    }
</div><!-- /.row -->

<script type="text/javascript">
    $('#cascading-dropdown').cascadingDropdown({
        selectBoxes: [
            {
                selector: '#UnitType_CategoryName'
            },
            {
                selector: '#UnitType_CategoryValue',
                requires: ['#UnitType_CategoryName'],
                source: function (request, response) {
                    request["CategoryName"] = request["UnitType_CategoryName"];

                    $.getJSON('@Url.Action("GetUnitTypes","UnitType")', request, function (data) {
                        response($.map(data, function (item, index) {
                            return {
                                label: item['Text'],
                                value: item['Value']
                            };
                        }));
                    });
                }
            },
            {
                selector: '#UnitId',
                requires: ['#UnitType_CategoryValue'],
                source: function (request, response) {
                    request["UnitTypeId"] = request["UnitType_CategoryValue"];

                    $.getJSON('@Url.Action("GetUnits", "Unit")', request, function (data) {
                        response($.map(data, function (item, index) {
                            return {
                                label: item['Text'],
                                value: item['Value']
                            };
                        }));
                    });
                }
            }
        ]
    });
</script>

<script>
    function form_submit_custom_check() {
        var UnitId = $('#UnitId').find(":selected").val();

        if (UnitId == "") {
            alert("The Unit No. field is required.");
            return 'false';
        }

        //check existing user        
        if ($('#isNewMember_value').val() == 'true') {
            var txtEmail = $('#Email').val();

            //alert(NewUser + ' ' + txtEmail);

            var isEmailValid = true;
            $.ajax({
                url: "@Url.Action("Ajax_GetMemberList", "Member")",
                type: "POST",
                dataType: "json",
                contentType: "application/json",
                async: false,
                success: function (result) {
                    $.each(result, function (index, value) {
                        //alert(value['Value']);
                        if (txtEmail.toLowerCase() == value['Value'].toLowerCase()) {
                            alert("This Email is already exists. Please use other email.");
                            isEmailValid = false;
                        }
                    });
                },
                error: function () {
                    alert("Error while authenticating user credentials!");
                }
            });

            if(isEmailValid == false)
            {
                return 'false';
            }

            return 'true';
        }
        else {
            return 'true';
        }
    }
</script>