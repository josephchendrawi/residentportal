@model ResComm.Web.Models.Unit
@{
    ViewBag.Title = "Add Unit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Title { Add }
@section ContentHeader{
}

<!-- Cascading Dropdown -->
<link href="@Url.Content("~/Content/cascadingdropdown/jquery.cascadingdropdown.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Content/cascadingdropdown/jquery.cascadingdropdown.js")" type="text/javascript"></script>
@{
    var EmptySelectList = new List<SelectListItem>();
    EmptySelectList.Add(new SelectListItem() { Value = "", Text = "Please Choose" });
}

<div class="row">
    @using (Html.BeginForm("Add", "Unit", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {        
        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">Unit Information</h3>
                </div><!-- /.box-header -->
                <div class="box-body">
                    @if (Model.UnitType.UnitTypeId != null && Model.UnitType.UnitTypeId != 0)
                    {
                        @Html.HiddenFor(m => m.UnitType.UnitTypeId)
                        @Html.HiddenFor(m => m.UnitType.CategoryName)
                        @Html.HiddenFor(m => m.UnitType.CategoryValue)
                        @*@Html.HiddenFor(m => m.UnitType.Floor)*@
                        
                        <div class="form-group">
                            <label>Block/Street</label>
                            @Html.TextBoxFor(m => m.UnitType.CategoryName, new { @class = "form-control", @readonly = true })
                        </div>
                        <div class="form-group">
                            <label>Block/Street Name</label>
                            @Html.TextBoxFor(m => m.UnitType.CategoryValue, new { @class = "form-control", @readonly = true })
                        </div>
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.UnitType.UnitTypeId)
                        @*@Html.HiddenFor(m => m.UnitType.Floor)*@

                        <div id="cascading-dropdown">
                            <div class="form-group">
                                <label>Block/Street</label>
                                @Html.DropDownEnumListFor(m => m.UnitType.CategoryName, typeof(UNIT_TYPE_CATEGORY), new { @class = "form-control" }, true, "Please Choose")
                            </div>
                            <div class="form-group">
                                <label>Block/Street Name<span style="color:red"> *</span></label>
                                @Html.DropDownListFor(m => m.UnitType.CategoryValue, EmptySelectList, new { @class = "form-control" })
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(m => m.UnitNo)
                        @Html.TextBoxFor(m => m.UnitNo, new { @class = "form-control" })
                    </div>
                </div><!-- /.box-body -->

                <div class="box-footer text-right">
                    <input type="submit" class="btn btn-primary" value="Submit" />
                </div>
            </div><!-- /.box -->

        </div><!--/.col (left) -->
    }
</div><!-- /.row -->

<script type="text/javascript">
    $('#cascading-dropdown').cascadingDropdown({
        selectBoxes: [
            {
                selector: '#UnitType_CategoryName'
            },
            {
                selector: '#UnitType_CategoryValue',
                requires: ['#UnitType_CategoryName'],
                source: function (request, response) {
                    request["CategoryName"] = request["UnitType.CategoryName"];

                    $.getJSON('@Url.Action("GetUnitTypes","UnitType")', request, function (data) {
                        response($.map(data, function(item, index) {
                            return {
                                label: item['Text'],
                                value: item['Value']
                            };
                        }));
                    });
                },
                onChange: function (event, value, requiredValues) {
                    $('#UnitType_UnitTypeId').val(value);
                }
            }
        ]
    });
</script>